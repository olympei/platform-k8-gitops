# Authentication method: "pod-identity" or "irsa"
authMethod: "pod-identity"

controller:
  serviceAccount:
    create: true
    name: efs-csi-controller-sa
    annotations:
      # IRSA annotation (used when authMethod is "irsa")
      eks.amazonaws.com/role-arn: "arn:aws:iam::ACCOUNT_ID:role/EKS-EFS-CSI-DriverRole-prod"
      # Pod Identity annotations (used when authMethod is "pod-identity")
      eks.amazonaws.com/pod-identity-association-role-arn: "arn:aws:iam::ACCOUNT_ID:role/EKS-EFS-CSI-DriverRole-prod"

node:
  serviceAccount:
    create: true
    name: efs-csi-node-sa
    annotations:
      # IRSA annotation (used when authMethod is "irsa")
      eks.amazonaws.com/role-arn: "arn:aws:iam::ACCOUNT_ID:role/EKS-EFS-CSI-DriverRole-prod"
      # Pod Identity annotations (used when authMethod is "pod-identity")
      eks.amazonaws.com/pod-identity-association-role-arn: "arn:aws:iam::ACCOUNT_ID:role/EKS-EFS-CSI-DriverRole-prod"

image:
  repository: public.ecr.aws/eks-distro/kubernetes-sigs/aws-efs-csi-driver
  tag: v2.5.0

tolerations:
  - key: "CriticalAddonsOnly"
    operator: "Exists"

# Pod Identity specific configuration
podIdentity:
  enabled: true
  roleArn: "arn:aws:iam::ACCOUNT_ID:role/EKS-EFS-CSI-DriverRole-prod"
